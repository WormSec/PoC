{"ast":null,"code":"var _jsxFileName = \"/home/dangremontlucas/Epitech/Year3/Semestre5/Wormsec/Wormsec/src/components/Visualizer.tsx\";\nimport React from 'react';\nimport Machine from './Machine';\nimport MachineLink from './MachineLink';\nimport './Visualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Visualizer = ({\n  machines,\n  links,\n  onMachineClick,\n  onBackgroundClick,\n  isReduced\n}) => {\n  const centerX = 275;\n  const centerY = 175;\n  const radius = 120;\n\n  // Calculer les positions en cercle\n  const positions = {};\n  machines.forEach((machine, index) => {\n    const angle = index * 2 * Math.PI / machines.length;\n    positions[machine.id] = {\n      x: centerX + radius * Math.cos(angle),\n      y: centerY + radius * Math.sin(angle)\n    };\n  });\n\n  // Handler for background clicks\n  const handleBackgroundClick = e => {\n    // Only trigger if the click was directly on the SVG background\n    if (e.target === e.currentTarget || e.target.tagName === 'svg') {\n      onBackgroundClick();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `visualizer ${isReduced ? 'reduced' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      viewBox: \"0 0 550 350\",\n      onClick: handleBackgroundClick // Add click handler to SVG\n      ,\n      children: [links.map((link, index) => /*#__PURE__*/_jsxDEV(MachineLink, {\n        sourceX: positions[link.source].x,\n        sourceY: positions[link.source].y,\n        targetX: positions[link.target].x,\n        targetY: positions[link.target].y,\n        bidirectional: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)), machines.map(machine => /*#__PURE__*/_jsxDEV(Machine, {\n        machine: machine,\n        x: positions[machine.id].x,\n        y: positions[machine.id].y,\n        onClick: () => onMachineClick(machine)\n      }, machine.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = Visualizer;\nexport default Visualizer;\nvar _c;\n$RefreshReg$(_c, \"Visualizer\");","map":{"version":3,"names":["React","Machine","MachineLink","jsxDEV","_jsxDEV","Visualizer","machines","links","onMachineClick","onBackgroundClick","isReduced","centerX","centerY","radius","positions","forEach","machine","index","angle","Math","PI","length","id","x","cos","y","sin","handleBackgroundClick","e","target","currentTarget","tagName","className","children","width","height","viewBox","onClick","map","link","sourceX","source","sourceY","targetX","targetY","bidirectional","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dangremontlucas/Epitech/Year3/Semestre5/Wormsec/Wormsec/src/components/Visualizer.tsx"],"sourcesContent":["import React from 'react';\nimport Machine from './Machine';\nimport MachineLink from './MachineLink';\nimport { Machine as MachineType, Link } from '../types';\nimport './Visualizer.css';\n\ninterface VisualizerProps {\n    machines: MachineType[];\n    links: Link[];\n    onMachineClick: (machine: MachineType) => void;\n    onBackgroundClick: () => void;\n    isReduced: boolean;\n}\n\nconst Visualizer: React.FC<VisualizerProps> = ({ \n    machines, \n    links, \n    onMachineClick,\n    onBackgroundClick,\n    isReduced\n}) => {\n\n  const centerX = 275;\n  const centerY = 175;\n  const radius = 120;\n  \n  // Calculer les positions en cercle\n  const positions: Record<string, { x: number, y: number }> = {};\n  machines.forEach((machine, index) => {\n    const angle = (index * 2 * Math.PI) / machines.length;\n    positions[machine.id] = {\n      x: centerX + radius * Math.cos(angle),\n      y: centerY + radius * Math.sin(angle)\n    };\n  });\n  \n  // Handler for background clicks\n  const handleBackgroundClick = (e: React.MouseEvent) => {\n    // Only trigger if the click was directly on the SVG background\n    if (e.target === e.currentTarget || (e.target as SVGElement).tagName === 'svg') {\n      onBackgroundClick();\n    }\n  };\n  \n  return (\n    <div className={`visualizer ${isReduced ? 'reduced' : ''}`}>\n      <svg \n        width=\"100%\" \n        height=\"100%\" \n        viewBox=\"0 0 550 350\"\n        onClick={handleBackgroundClick} // Add click handler to SVG\n      >\n        {/* Dessiner d'abord tous les liens */}\n        {links.map((link, index) => (\n          <MachineLink\n            key={index}\n            sourceX={positions[link.source].x}\n            sourceY={positions[link.source].y}\n            targetX={positions[link.target].x}\n            targetY={positions[link.target].y}\n            bidirectional={true}\n          />\n        ))}\n        \n        {/* Dessiner ensuite toutes les machines (pour qu'elles soient au-dessus des liens) */}\n        {machines.map(machine => (\n          <Machine\n            key={machine.id}\n            machine={machine}\n            x={positions[machine.id].x}\n            y={positions[machine.id].y}\n            onClick={() => onMachineClick(machine)}\n          />\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nexport default Visualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}