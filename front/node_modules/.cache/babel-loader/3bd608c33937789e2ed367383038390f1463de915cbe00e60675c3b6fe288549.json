{"ast":null,"code":"var _jsxFileName = \"/home/dangremontlucas/Epitech/Year3/Semestre5/Wormsec/Wormsec/src/components/MachineLink.tsx\";\nimport React from 'react';\nimport './MachineLink.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MachineLink = ({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  type\n}) => {\n  const isConnected = type === \"connected\";\n  const strokeColor = isConnected ? \"#00FF9D\" : \"#FF3333\";\n  const strokeDashArray = isConnected ? \"none\" : \"5,5\";\n  const angle = Math.atan2(targetY - sourceY, targetX - sourceX);\n  const radius = 30;\n  const startX = sourceX + Math.cos(angle) * radius;\n  const startY = sourceY + Math.sin(angle) * radius;\n  const endX = targetX - Math.cos(angle) * radius;\n  const endY = targetY - Math.sin(angle) * radius;\n  const arrowSize = 8;\n  const arrowAngle = 0.5;\n  const point1X = endX - arrowSize * Math.cos(angle - arrowAngle);\n  const point1Y = endY - arrowSize * Math.sin(angle - arrowAngle);\n  const point2X = endX - arrowSize * Math.cos(angle + arrowAngle);\n  const point2Y = endY - arrowSize * Math.sin(angle + arrowAngle);\n  const reverseAngle = Math.atan2(sourceY - targetY, sourceX - targetX);\n  const reversePoint1X = startX - arrowSize * Math.cos(reverseAngle - arrowAngle);\n  const reversePoint1Y = startY - arrowSize * Math.sin(reverseAngle - arrowAngle);\n  const reversePoint2X = startX - arrowSize * Math.cos(reverseAngle + arrowAngle);\n  const reversePoint2Y = startY - arrowSize * Math.sin(reverseAngle + arrowAngle);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: `machine-link machine-link-${type}`,\n    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n      x1: startX,\n      y1: startY,\n      x2: endX,\n      y2: endY,\n      stroke: strokeColor,\n      strokeWidth: \"1.5\",\n      strokeDasharray: strokeDashArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), isConnected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: `${endX},${endY} ${point1X},${point1Y} ${point2X},${point2Y}`,\n        fill: strokeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: `${startX},${startY} ${reversePoint1X},${reversePoint1Y} ${reversePoint2X},${reversePoint2Y}`,\n        fill: strokeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c = MachineLink;\nexport default MachineLink;\nvar _c;\n$RefreshReg$(_c, \"MachineLink\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","MachineLink","sourceX","sourceY","targetX","targetY","type","isConnected","strokeColor","strokeDashArray","angle","Math","atan2","radius","startX","cos","startY","sin","endX","endY","arrowSize","arrowAngle","point1X","point1Y","point2X","point2Y","reverseAngle","reversePoint1X","reversePoint1Y","reversePoint2X","reversePoint2Y","className","children","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","points","fill","_c","$RefreshReg$"],"sources":["/home/dangremontlucas/Epitech/Year3/Semestre5/Wormsec/Wormsec/src/components/MachineLink.tsx"],"sourcesContent":["import React from 'react';\nimport './MachineLink.css';\n\ninterface MachineLinkProps {\n    sourceX: number;\n    sourceY: number;\n    targetX: number;\n    targetY: number;\n    type: \"connected\" | \"isolated\";\n}\n\nconst MachineLink: React.FC<MachineLinkProps> = ({ \n    sourceX, \n    sourceY, \n    targetX, \n    targetY,\n    type\n}) => {\n    const isConnected = type === \"connected\";\n    const strokeColor = isConnected ? \"#00FF9D\" : \"#FF3333\";\n    const strokeDashArray = isConnected ? \"none\" : \"5,5\";\n    \n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX);\n    \n    const radius = 30; \n    const startX = sourceX + Math.cos(angle) * radius;\n    const startY = sourceY + Math.sin(angle) * radius;\n    const endX = targetX - Math.cos(angle) * radius;\n    const endY = targetY - Math.sin(angle) * radius;\n    \n    const arrowSize = 8;\n    const arrowAngle = 0.5;\n    \n    const point1X = endX - arrowSize * Math.cos(angle - arrowAngle);\n    const point1Y = endY - arrowSize * Math.sin(angle - arrowAngle);\n    const point2X = endX - arrowSize * Math.cos(angle + arrowAngle);\n    const point2Y = endY - arrowSize * Math.sin(angle + arrowAngle);\n    \n    const reverseAngle = Math.atan2(sourceY - targetY, sourceX - targetX);\n    const reversePoint1X = startX - arrowSize * Math.cos(reverseAngle - arrowAngle);\n    const reversePoint1Y = startY - arrowSize * Math.sin(reverseAngle - arrowAngle);\n    const reversePoint2X = startX - arrowSize * Math.cos(reverseAngle + arrowAngle);\n    const reversePoint2Y = startY - arrowSize * Math.sin(reverseAngle + arrowAngle);\n    \n    return (\n        <g className={`machine-link machine-link-${type}`}>\n            <line\n                x1={startX}\n                y1={startY}\n                x2={endX}\n                y2={endY}\n                stroke={strokeColor}\n                strokeWidth=\"1.5\"\n                strokeDasharray={strokeDashArray}\n            />\n            \n            {isConnected && (\n                <>\n                    <polygon \n                        points={`${endX},${endY} ${point1X},${point1Y} ${point2X},${point2Y}`}\n                        fill={strokeColor}\n                    />\n                    <polygon \n                        points={`${startX},${startY} ${reversePoint1X},${reversePoint1Y} ${reversePoint2X},${reversePoint2Y}`}\n                        fill={strokeColor}\n                    />\n                </>\n            )}\n        </g>\n    );\n};\n\nexport default MachineLink;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}